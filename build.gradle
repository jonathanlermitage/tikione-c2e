group 'tikione'
version '1.7.0'

buildscript {
    ext.kotlin_version = '1.2.60'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.ksoichiro:gradle-build-info-plugin:0.2.0'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.20.0'
    }
}

apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'com.github.ksoichiro.build.info' // https://github.com/ksoichiro/gradle-build-info-plugin
apply plugin: 'com.github.ben-manes.versions' // https://github.com/ben-manes/gradle-versions-plugin
idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}
compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

repositories {
    mavenCentral()
    jcenter()
}

dependencyUpdates.resolutionStrategy = {
    //noinspection GrUnresolvedAccess
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'Alpha', 'ALPHA', 'b', 'beta', 'Beta', 'BETA', 'rc', 'â€ŒRC', 'M', 'EA', 'pr'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('snapshot')
            }
        }
    }
}

configurations {
    jar.archiveName = 'c2e.jar'
}

task copyLibs(type: Copy) {
    from configurations.runtime
    into "$buildDir/libs/lib"
}
task copyLaunchers(type: Copy) {
    from "./launcher"
    into "$buildDir/libs"
    include('*.cmd', "*.sh")
}
task copyDoc(type: Copy) {
    from "."
    into "$buildDir/libs"
    include('CHANGELOG.md', 'LICENSE.txt', 'LISEZMOI.html')
}
task copy3rdPartyLicenses(type: Copy) {
    from "./3rdparty-licenses"
    into "$buildDir/libs/3rdparty-licenses"
}
task copyLicense(type: Copy) {
    from "./"
    into "$buildDir/libs"
    include('LICENSE.txt')
}
jar {
    doFirst {
        new File("$buildDir/resources/main/version.txt").write(project.version.toString())
        manifest {
            if (!configurations.compile.isEmpty()) {
                attributes(
                        'Main-Class': 'fr.tikione.c2e.Main',
                        'Class-Path': configurations.runtimeClasspath.files.collect { 'lib/' + it.getName() }.join(' ')
                )
            }
        }
    }
    dependsOn copyLibs
    dependsOn copyLaunchers
    dependsOn copyDoc
    dependsOn copy3rdPartyLicenses
    dependsOn copyLicense
}
build {
    doFirst {
        new File("$buildDir/resources/main/version.txt").write(project.version.toString())
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "net.sf.jmimemagic:jmimemagic:0.1.5"
    compile "commons-io:commons-io:2.6"
    compile "commons-codec:commons-codec:1.11"
    compile "org.jsoup:jsoup:1.11.3"
    compile "org.slf4j:slf4j-api:1.7.25"
    compile "ch.qos.logback:logback-classic:1.2.3"
    compile "org.codehaus.janino:janino:3.0.8"
    compile "com.github.salomonbrys.kodein:kodein:4.1.0"
    testCompile 'junit:junit:4.12'
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}
